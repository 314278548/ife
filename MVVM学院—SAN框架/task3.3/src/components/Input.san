<template>
    <div class="ui-input">
        <input 
            class="{{ isError ? 'error' : 'normal' }}"
            type="{{ inputType }}"
            value="{= value =}"
            placeholder="{{ placeholder }}"
            disabled="{{ disabled }}"
            readonly="{{ readonly }}"
            on-input="handleInput($event)"
            on-focus="handleFocus($event)"
            on-blur="handleBlur($event)"
        >
    </div>
</template>

<script>

export default {
    initData: function() {
        var error = this.parentComponent.data.get("isError");
        return {
            value: "",
            placeholder: "",
            disabled: false,
            readonly: false,
            isError: error,
            inputType:"text"
        }
    },
    trimWhitespace: "all",
    handleInput: function(event) {
        this.fire("input",event);
    },
    handleFocus: function(event) {
        // 重新派发focus事件给父元素
        this.fire("focus",event);
    },
    handleBlur: function(event) {
        // 父元素收到消息验证后更新数据，，写的好丑。。但我真的想不到别的办法了好无力。。
        this.nextTick(() => {
            this.data.set("isError", this.parentComponent.data.get("isError"));
        });
        this.dispatch('UI:input-blur');
        // 重新派发blur事件给父元素
        this.fire("blur",event);
    }
}
</script>
<style>
    /* 输入框样式部分 */
    .ui-input {
        position: relative;
    }
    .ui-input input {
        outline: none;
        border: 1px solid #aaa;
        border-radius: 5px;
        color: #555;
        font-size: 20px;
        width: 250px;
        height: 40px;
        padding: 10px 10px;
        box-sizing: border-box;
        transition: all .3s;
    }
    .ui-input input::-webkit-input-placeholder,
    .ui-input input::-moz-placeholder,
    .ui-input input::-moz-input-placeholder,
    .ui-input input::input-placeholder, {
        color: #aaa;
    }
    .ui-input .normal:hover {
        border: 1px solid #555;
    }
    .ui-input .normal:focus {
        border: 1px solid #555;
        color: #555;
    }
    .ui-input input:disabled {
        cursor: not-allowed;
        background: #f7f7f7;
        color: #aaa;
    }
    .ui-input input:disabled:hover {
        border: 1px solid #aaa;
    }

    .ui-input .error {
        border: 1px solid #ff7275;
    }
</style>